apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp
  namespace: nginx-ingress
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
        - name: springappcontainer
          image: mylandmarktech/spring-boot-mongo
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              memory: "512Mi"
              cpu: "500m"
          ports:
          - containerPort: 8080
          env:
          - name: MONGO_DB_HOSTNAME
            value: mongosvc
          - name: MONGO_DB_USERNAME
            value: devdb
          - name: MONGO_DB_PASSWORD
            value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  namespace: nginx-ingress
  
spec:
  type: ClusterIP
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: nginx-ingress
  
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      
      name: myapp
      labels:
        app: mongo
    spec:
      containers:
      - name: mongodbcontainer
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
  #namespace: nginx-ingress
  
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  #namespace: nginx-ingress
  name: springapp-ingress-rule
spec:
  ingressClassName: nginx
  rules:
  - host: "tmrdevops.link"
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: springappsvc
            port:
              number: 80
